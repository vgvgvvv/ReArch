<#@ template language="C#" #>
<#@ output extension=".cs" #>
<#@ include file="../Helpers.ttinclude" #>

using System;
using System.Runtime.CompilerServices;
using ReArch.Core;
using ReArch.Core.Utils;

namespace ReArch.Core;
public partial class Archetype
{
<#
    for (var index = 2; index < Amount; index++)
    {
        var generics = AppendGenerics(index);
        var parameters = AppendGenericInDefaultParams(index, hasNullable:false);
        var inParameters = InsertGenericInParams(index);
#>
    internal int Add<<#= generics #>>(Entity entity, out int index, <#= parameters #>)
<#
        for (var i = 0; i < index; i++)
        {
#>
        where T<#= i #> : unmanaged
<#
        }
#>
    {
        var createdChunk = Add(entity, out index);
        Set(ref index, <#= inParameters #>);
        return createdChunk;
    }

<#
    }
#>
}


