<#@ template language="C#" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ include file="../Helpers.ttinclude" #>

using System;
using System.Runtime.CompilerServices;
using ReArch.Core;
using ReArch.Core.Utils;

namespace ReArch.Core;

public partial class Archetype
{
<#
    for (var index = 2; index <= Amount; index++)
    {
        var generics = AppendGenerics(index);
        var getIds = new StringBuilder();
        var isSet = new StringBuilder();

        for (var i = 0; i < index; i++)
        {
            getIds.AppendLine($"var t{i}ComponentId = Component<T{i}>.ComponentType.Id;");
            isSet.Append($"ComponentBitSet.IsSet(t{i}ComponentId)");
            if (i < index) isSet.Append(" && ");
        }

        isSet.Length -= 3;
#>

   public bool Has<<#= generics #>>()
    {
        <#= Indent(getIds, 8) #>
        return <#= isSet.ToString() #>;
    }

<#
    }
#>
}